# Строки (Strings):упорядоченная последовательность символов

# Списки (Lists):упорядоченная последовательность объектов

# Кортежи (Tuples):упорядоченная неизменяемая последовательность объектов

# Словари (Dictionaries):пары ключ значение

# напишите любое выражение, которое использует умножение, деление, экспоненту, сложение и вычитание - так,
# чтобы результат получился равным 100.25
# a = 100.25
# b = a/2
# c = b*2
# print("{:1.2f}".format(c))
#
##Дайте ответы на следующие 3 вопроса, без запуска кода. Затем введите код, чтобы проверить ответ.
#
# Какое значение будет результатом выражения 4 * (6 + 5)
# c = 4*(6+5)
# print(c)
# 44
# Какое значение будет результатом выражения 4 * 6 + 5
# c = 4*6+5
# print(c)
# 29
# Какое значение будет результатом выражения 4 + 6 * 5
# c = 4 + 6 * 5
# print(c)
# 34
#
# Какой будет тип у результата выражения 3 + 1.5 + 4?
# 8.5 float
#
# Что Вы будете использовать, чтобы найти квадратный корень числа, а также квадрат числа?

# Квадратный корень: ** 0.5
# Квадрат: ** 2




Есть строка 'hello'. Введите команду, которая выведет букву 'e'. Введите Ваш код в ячейке ниже:

s = 'hello'
# Выведите 'e' с помощью индексирования
s = 'hello'
print(s[1])

Выведите строку 'hello' в обратном порядке

s ='hello'
# Выведите строку в обратном порядке
s = 'hello'
print(s[::-1])

Используя строку hello, укажите два способа, как можно получить букву 'o' с помощью индексирования.

s ='hello'
# Выведите букву 'o'

# Способ 1:
s = 'hello'
print(s[4])

# Способ 2:
s = 'hello'
print(s[-1])




Создайте список [0,0,0] двумя разными способами.

# Способ 1: a = [0,0,0]
# Способ 2:
a = "0,0,0"
b = a.split()
print(b)


Переопределите 'hello' в этом сложенном списке, чтобы вместо этого сказать 'goodbye':
list3 = [1,2,[3,4,'hello']]


list3 = [1,2,[3,4,'hello']]
list3[2][2] = "goodbye"
print(list3)

Отсортируйте список ниже:

list4 = [5,3,4,6,1]

list4 = [5,3,4,6,1]
list4.sort()
print(list4)


Используя ключи и индексирование, прочитайте 'hello' из следующих словарей:

d = {'simple_key':'hello'}
# прочитайте 'hello'
d = {'simple_key':'hello'}
print(d['simple_key'])


d = {'k1':{'k2':'hello'}}

d = {'k1':{'k2':'hello'}}
print(d['k1']["k2"])


d = {'k1':[{'nest_key':['this is deep',['hello']]}]}

d = {'k1':[{'nest_key':['this is deep',['hello']]}]}
print(d['k1'][0]['nest_key'][1])

d = {'k1':[1,2,{'k2':['this is tricky',{'tough':[1,2,['hello']]}]}]}

d = {'k1':[1,2,{'k2':['this is tricky',{'tough':[1,2,['hello']]}]}]}
print(d["k1"][2][0]['k2'][1]['tough'][2])

    Словари сортировать нельзя потому что это маппинги а не последовательности

В чем основная разница между кортежами и списками?
 Кортежи нельзя изменять

Как можно создать кортеж?
с помощью круглых скобок


В чем основная особенность множеств?
Содержат только уникальные значения

Используйте множество, чтобы найти уникальные значения в списке ниже:

list5 = [1,2,2,33,4,4,11,22,3,3,2]

list5 = [1,2,2,33,4,4,11,22,3,3,2]
print(set(list5))


Последний вопрос: какой будет результат boolean для ячейки ниже?

# два вложенных списка
l_one = [1,2,[3,4]]
l_two = [1,2,{'k1':4}]

# True или False?
l_one[2][0] >= l_two[2]['k1']

False